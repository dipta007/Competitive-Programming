#define M 1000000
bool marked[M];
vector <int> primes;

void sieve(int n) {
	primes.push_back(2);
	for (int i = 3; i * i <= n; i += 2) {
		if (marked[i] == 0) {
			primes.push_back(i);
			for (int j = i * i; j <= n; j += i + i) {
				marked[j] = 1;
		}
    }
  }
}

// prime number sob serially "primes" vector e save hobe
// like primes[0]=2,primes[1]=3 and so on

vector<int>factors;
void factorize( int n )
{
    int sqrtn = sqrt ( n );
    for ( int i = 0; i < primes.size() && primes[i] <= sqrtn; i++ )
    {
        if ( n % primes[i] == 0 )
        {
            while ( n % primes[i] == 0 )
            {
                n /= primes[i];
                factors.push_back(primes[i]);
            }
            sqrtn = sqrt ( n );
        }
    }
    if ( n != 1 )
    {
        factors.push_back(n);
    }
}


