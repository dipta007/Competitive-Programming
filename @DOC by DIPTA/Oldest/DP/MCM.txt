#define MAX 105
int row[MAX],col[MAX];
int dp[MAX][MAX];
bool visited[MAX][MAX];

int call(int beg,int end)
{
    if(beg>=end)return 0;
    if(visited[beg][end])return dp[beg][end];
    visited[beg][end]=1;
    int ans=INF;
    FOR(mid,beg,end-1)
    {
        int opr_left=call(beg,mid);
        int opr_right=call(mid+1,end);
        int opr_left_right=row[beg]*col[mid]*col[end];
        int tot=opr_left+opr_right+opr_left_right;
        ans=min(ans,tot);
    }
    dp[beg][end]=ans;
    return dp[beg][end];
}
int main() {  
   int n; cin >> n;  
   FOR(i,0, n-1) cin >> row[i] >> col[i];  
   cout << f(0, n - 1) << endl;  
}  
///**************uva 10559 ***************/
int arr[205];
int dp[205][205][205];
int call(int beg,int end,int ageSilo)
{
//    debug(beg,end,ageSilo)
    if(beg > end)
        return 0;
    int &ret = dp[beg][end][ageSilo];
    if(ret != -1)return ret;
    ret = 0;
    /// aikhan e vaglam
    ret = max(ret, (ageSilo+1) * (ageSilo+1) + call(beg+1,end,0));
    FOR(i,beg+1,end)
    {
        if(arr[i] == arr[beg])
        {
            ret = max(ret, call(i,end,ageSilo+1) + call(beg+1,i-1,0));
        }
    }
    return ret;
}